<?xml version="1.0" encoding="UTF-8"?>
<!--

        Copyright (C) 2013-2014  the original author or authors.

        This program is free software: you can redistribute it and/or modify
        it under the terms of the GNU General Public License as published by
        the Free Software Foundation, either version 3 of the License,
        any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program.  If not, see <http://www.gnu.org/licenses/>

-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	default-autowire="byType">

	
	<!-- <bean id="instanceMonitor" class="org.excalibur.core.compute.monitoring.monitors.resources.InstanceStateMonitor">
	    <constructor-arg ref="instanceService"/>
	    <constructor-arg ref="dbi"/>
	</bean>
	
	<bean id="instanceAmazonMonitorJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="instanceMonitor" />
		<property name="targetMethod" value="monitorUserInstances" />
		<property name="concurrent" value="false" />
		<property name="arguments" value="amazon"/>
		<property name="group" value="amazon"/>
	</bean>
	 
	<bean id="instanceMonitorTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
	    <property name="jobDetail" ref="instanceAmazonMonitorJob" />
        1 minute
        <property name="startDelay" value="60000" />
        repeat every 5 minutes
        <property name="repeatInterval" value="300000" />
    </bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no">
		<property name="jobDetails">
			<list>
				<ref bean="instanceAmazonMonitorJob" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="instanceMonitorTrigger" />
			</list>
		</property>
	</bean>   -->
	
	
	<!-- <bean id="discoverNodesMonitor" class="org.excalibur.overlay.hybrid.FixDiscoveryReferencesTask"/>
	
	<bean id="discoverNodesJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	    <property name="targetObject" ref="discoverNodesMonitor" />
		<property name="targetMethod" value="heartbeat" />
		<property name="concurrent" value="false" />
		<property name="arguments" value="discovery"/>
		<property name="group" value="discovery"/>
	</bean>

	<bean id="discoverNodesTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
	    <property name="jobDetail" ref="discoverNodesJob" />
        <property name="startDelay" value="60000" />
        <property name="repeatInterval" value="60000" />
    </bean>

 
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no">
		<property name="jobDetails">
			<list>
				<ref bean="discoverNodesJob" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="discoverNodesTrigger" />
			</list>
		</property>
	</bean> -->
	
	<bean id="monitorApplicationDescriptionJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean" 
	   depends-on="monitorApplicationDescription">
	    <property name="targetObject" ref="monitorApplicationDescription" />
		<property name="targetMethod" value="monitorApplicationDescriptionSubmission" />
		<property name="concurrent" value="false" />
		<property name="arguments" value="jobs-table"/>
		<property name="group" value="jobs-table"/>
	</bean>
	
	
	<bean id="monitorApplicationDescriptionTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean" depends-on="monitorApplicationDescriptionJob">
	    <property name="jobDetail" ref="monitorApplicationDescriptionJob" />
        <!--  1 minute -->
        <property name="startDelay" value="60000" />
        <!--repeat every 5 minutes -->
        <property name="repeatInterval" value="300000" />
    </bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no" depends-on="monitorApplicationDescriptionTrigger">
		<property name="jobDetails">
			<list>
				<ref bean="monitorApplicationDescriptionJob" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="monitorApplicationDescriptionTrigger" />
			</list>
		</property>
	</bean>
	
</beans>