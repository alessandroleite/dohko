#
#     Copyright (C) 2013-2014  the original author or authors.
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License,
#     any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>
#

# Uncomment only one section to select the protocol to be used by run.jndi target.
# The JGroups configuration provides the same result as the hard-coded example.

#---------------
# JGroups
#
myProto.type=net.sf.jgcs.jgroups.JGroupsProtocolFactory
myProto.converter=org.osjava.sj.loader.convert.BeanConverter

myGroup=MyGroup
myGroup.type=net.sf.jgcs.jgroups.JGroupsGroup
myGroup.converter=org.osjava.sj.loader.convert.ConstructorConverter

myService.type=net.sf.jgcs.jgroups.JGroupsService
myService.converter=org.osjava.sj.loader.convert.BeanConverter

#---------------
# Corosync
#
#myProto.type=net.sf.jgcs.corosync.CPGProtocolFactory
#myProto.converter=org.osjava.sj.loader.convert.BeanConverter
#
#myGroup=MyGroup
#myGroup.type=net.sf.jgcs.corosync.CPGGroup
#myGroup.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#myService=safe
#myService.type=net.sf.jgcs.corosync.CPGService
#myService.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#---------------
# Spread
#
#myProto.type=net.sf.jgcs.spread.SpProtocolFactory
#myProto.converter=org.osjava.sj.loader.convert.BeanConverter
#
#myGroup=MyGroup
#myGroup.type=net.sf.jgcs.spread.SpGroup
#myGroup.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#myService=safe
#myService.type=net.sf.jgcs.spread.SpService
#myService.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#---------------
# Appia
#
#myProto.type=net.sf.appia.jgcs.AppiaProtocolFactory
#myProto.converter=org.osjava.sj.loader.convert.BeanConverter
#
#myGroup=MyGroup
#myGroup.type=net.sf.appia.jgcs.AppiaGroup
#myGroup.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#myService=uniform_total_order
#myService.type=net.sf.appia.jgcs.AppiaService
#myService.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#---------------
# ZK
#
#myProto.type=net.sf.jgcs.zk.ZKProtocolFactory
#myProto.converter=org.osjava.sj.loader.convert.BeanConverter
#
#myGroup=testgroup
#myGroup.type=net.sf.jgcs.zk.ZKGroup
#myGroup.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#myService.type=net.sf.jgcs.zk.ZKService
#myService.converter=org.osjava.sj.loader.convert.BeanConverter
#
#---------------
# NeEM
#
#myProto.type=net.sf.jgcs.neem.NeEMProtocolFactory
#myProto.converter=org.osjava.sj.loader.convert.BeanConverter
#
#myGroup=127.0.0.1:10000
#myGroup.type=net.sf.jgcs.neem.NeEMGroup
#myGroup.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#myService.type=net.sf.jgcs.neem.NeEMService
#myService.converter=org.osjava.sj.loader.convert.BeanConverter
#
#---------------
# Ip
#
#myProto.type=net.sf.jgcs.ip.IpProtocolFactory
#myProto.converter=org.osjava.sj.loader.convert.BeanConverter
#
#myGroup=225.1.2.3:10000
#myGroup.type=net.sf.jgcs.ip.IpGroup
#myGroup.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#myService=1
#myService.type=net.sf.jgcs.ip.IpService
#myService.converter=org.osjava.sj.loader.convert.ConstructorConverter